{"version":3,"sources":["components/basic/icons/Github.tsx","components/basic/Footer.tsx","components/basic/Header.tsx","utils/helpers.ts","store/actions.ts","API.ts","components/basic/Employee.tsx","components/basic/inputs/Checkbox.tsx","components/Employees/EmployeesList.tsx","store/thunks.ts","components/Employees/Birthdays.tsx","components/Employees/Employees.tsx","components/Technologies/Technologies.tsx","utils/localStorage.ts","store/shape.ts","store/reducers.ts","store/store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GithubIcon","props","xmlns","width","size","height","aria-hidden","focusable","data-prefix","data-icon","className","role","viewBox","fill","d","Footer","href","Header","to","Alphabet","Months","SET_EMPLOYEES","UPDATE_SELECTION","getEmployees","a","axios","get","then","res","data","map","emp","dob","Date","parse","EmployeeItem","item","lastName","firstName","Checkbox","value","onClick","setValue","type","checked","onChange","evt","target","EmployeesByLetter","letter","items","length","undefined","updateSelection","EmployeeListItem","id","isSelected","EmployeeList","connect","state","employees","selected","includes","dispatch","updateEmployeeSelection","useEffect","getProp","l","toLowerCase","filter","elem","MonthEmployees","mIndex","monthIndex","Math","floor","date","getDate","getMonth","getFullYear","Birthday","month","index","getUTCMonth","Employees","Technologies","LocalStorageKey","InitialShape","action","updateSelectionReducer","id2","store","createStore","serializedState","localStorage","getItem","JSON","err","console","log","accessStorage","applyMiddleware","thunk","subscribe","setItem","stringify","writeToStorage","getState","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21142b26.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const GithubIcon = (props: { size: number }): JSX.Element => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={props.size}\n        height={props.size}\n        aria-hidden=\"true\"\n        focusable=\"false\"\n        data-prefix=\"fab\"\n        data-icon=\"github\"\n        className=\"icon\"\n        role=\"img\"\n        viewBox=\"0 0 496 512\"\n    >\n        <path\n            fill=\"currentColor\"\n            d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6\n                3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2\n                 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8\n                  8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4\n                   0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6\n                    27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3\n                     2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7\n                      5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17\n                       46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3\n                       383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"\n        />\n    </svg>\n);\n","import React from \"react\";\nimport { GithubIcon } from \"./icons/Github\";\n\nexport const Footer = () => (\n    <footer className=\"main-footer\">\n        <span className=\"link-wrap\">\n            <GithubIcon size={20} />\n            <a href={\"https://github.com/kamennova/employees-test\"}>\n                employees-test\n            </a>\n        </span>\n    </footer>\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Header = () => (\n    <header className={\"main-header\"}>\n        <span className=\"main-logo\">Yalantis React.js School test task</span>\n        <ul className=\"links\">\n            <li>\n                <Link to={\"/employees\"}>Employees</Link>\n            </li>\n            <li>\n                <Link to={\"/technologies\"}>Technologies</Link>\n            </li>\n        </ul>\n    </header>\n);\n","import { Employee } from \"../types/Employee\";\n\nconst Alphabet = [\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n];\n\nexport const groupByAlphabetArr = <T extends {}>(\n    items: T[],\n    getProp: (_: T) => string\n): Array<{ letter: string; items: T[] }> =>\n    Alphabet.map((l) => {\n        const letter = l.toLowerCase();\n        return {\n            letter,\n            items: items.filter(\n                (item) => getProp(item)[0].toLowerCase() === letter\n            ),\n        };\n    });\n\nexport const Months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n];\n\nexport const groupByBdayArr = (\n    items: Employee[]\n): Array<{ monthIndex: number; items: Employee[] }> =>\n    Months.map((month, index) => ({\n        monthIndex: index,\n        items: items.filter((item) => item.dob.getUTCMonth() === index),\n    })).filter((item) => item.items.length > 0);\n\nexport const formatDate = (date: Date): string =>\n    `${date.getDate()} ${Months[date.getMonth()]} ${date.getFullYear()}`;\n\nexport const getSeasonByMonth = (mIndex: number): string =>\n    [\"winter\", \"spring\", \"summer\", \"autumn\"][Math.floor((mIndex + 1) / 3) % 4];\n","import { Employee } from \"../types/Employee\";\n\nexport const SET_EMPLOYEES = \"Set_employees\",\n    UPDATE_SELECTION = \"Update selection\";\n\nexport type SetEmployeesAction = {\n    type: typeof SET_EMPLOYEES;\n    employees: Employee[];\n};\n\nexport type UpdateEmployeeSelectionAction = {\n    id: string;\n    type: typeof UPDATE_SELECTION;\n};\n\nexport const setEmployees = (employees: Employee[]): SetEmployeesAction => ({\n        employees,\n        type: SET_EMPLOYEES,\n    }),\n    updateEmployeeSelection = (id: string): UpdateEmployeeSelectionAction => ({\n        id,\n        type: UPDATE_SELECTION,\n    });\n\nexport type EmployeesAction =\n    | SetEmployeesAction\n    | UpdateEmployeeSelectionAction;\n","import axios from \"axios\";\nimport { Employee, EmployeeReq } from \"./types/Employee\";\n\nexport const getEmployees = async (): Promise<Employee[]> =>\n    axios\n        .get(\"https://yalantis-react-school-api.yalantis.com/api/task0/users\")\n        .then((res) =>\n            res.data.map((emp: EmployeeReq) => ({\n                ...emp,\n                dob: new Date(Date.parse(emp.dob)),\n            }))\n        );\n","import React from \"react\";\nimport { Employee } from \"../../types/Employee\";\n\nexport const EmployeeItem = (props: { item: Employee }) => (\n    <span className={\"employee-name\"}>\n        {props.item.lastName + \" \" + props.item.firstName}\n    </span>\n);\n","import React from \"react\";\n\ntype CheckboxProps = {\n    value: boolean;\n    setValue: (v: boolean) => void;\n};\n\nexport const Checkbox = (props: CheckboxProps) => (\n    <span className={\"checkbox\"}>\n        <span\n            className={`checkbox-indicator ${props.value ? \"checked\" : \" \"}`}\n            onClick={() => props.setValue(!props.value)}\n        />\n        <input\n            className={\"visually-hidden\"}\n            type=\"checkbox\"\n            checked={props.value}\n            onChange={(evt) => props.setValue(evt.target.checked)}\n        />\n    </span>\n);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { groupByAlphabetArr } from \"../../utils/helpers\";\nimport { updateEmployeeSelection } from \"../../store/actions\";\nimport { StoreShape } from \"../../store/shape\";\nimport { thunkFetchEmployees } from \"../../store/thunks\";\nimport { Employee } from \"../../types/Employee\";\nimport { EmployeeItem } from \"../basic/Employee\";\nimport { Checkbox } from \"../basic/inputs/Checkbox\";\n\ntype EmployeeSelection = Employee & { isSelected: boolean };\n\ntype ListProps = {\n    items: EmployeeSelection[];\n    getEmployees: () => Promise<Employee[]>;\n    updateEmployeeSelection: (id: string) => void;\n};\n\nconst EmployeeListComponent = (props: ListProps) => {\n    useEffect(() => {\n        if (props.items.length === 0) {\n            props.getEmployees();\n        }\n    }, [props.items]);\n\n    return (\n        <div className={\"employees\"}>\n            <h2>Employees</h2>\n            <div className={\"alphabet-list\"}>\n                {groupByAlphabetArr(props.items, emp => emp.lastName).map((elem) => (\n                    <EmployeesByLetter\n                        {...elem}\n                        updateSelection={props.updateEmployeeSelection}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nconst EmployeesByLetter = (props: {\n    items: EmployeeSelection[];\n    letter: string;\n    updateSelection: (id: string) => void;\n}) => (\n    <article className={\"alphabet-item\"}>\n        <h2>{props.letter}</h2>\n        {props.items.length === 0 ? \"---\" : undefined}\n\n        <ul className={\"employees-letter-list\"}>\n            {props.items.map((emp) => (\n                <EmployeeListItem\n                    item={emp}\n                    updateSelection={props.updateSelection}\n                />\n            ))}\n        </ul>\n    </article>\n);\n\nconst EmployeeListItem = (props: {\n    item: EmployeeSelection;\n    updateSelection: (id: string) => void;\n}) => (\n    <li className={\"employee-list-item\"}>\n        <span\n            onClick={() => props.updateSelection(props.item.id)}\n            className={\"employee-item-wrap\"}\n        >\n            <EmployeeItem item={props.item}/>\n        </span>\n        <Checkbox\n            value={props.item.isSelected}\n            setValue={() => props.updateSelection(props.item.id)}\n        />\n    </li>\n);\n\nconst mapStateToProps = (state: StoreShape) => ({\n    items: state.employees.map((emp) => ({\n        ...emp,\n        isSelected: state.selected.includes(emp.id),\n    })),\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    getEmployees: () => dispatch(thunkFetchEmployees()),\n    updateEmployeeSelection: (id: string) =>\n        dispatch(updateEmployeeSelection(id)),\n});\n\nexport const EmployeeList = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EmployeeListComponent);\n","import { Action, ActionCreator, Dispatch } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { getEmployees } from \"../API\";\nimport { setEmployees } from \"./actions\";\nimport { StoreShape } from \"./shape\";\n\nexport type ThunkResult<ValueType> = ActionCreator<\n    ThunkAction<Promise<ValueType | undefined>, StoreShape, void, Action<void>>\n>;\n\nexport const thunkFetchEmployees: ThunkResult<Action> = () => async (\n    dispatch: Dispatch\n) => await getEmployees().then((emp) => dispatch(setEmployees(emp)));\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    formatDate,\n    getSeasonByMonth,\n    groupByBdayArr,\n    Months,\n} from \"../../utils/helpers\";\nimport { StoreShape } from \"../../store/shape\";\nimport { Employee } from \"../../types/Employee\";\nimport { EmployeeItem } from \"../basic/Employee\";\n\nconst BirthdayItems = (props: { items: Employee[] }) => {\n    return (\n        <aside className={\"employee-birthday\"}>\n            <h2>Employees birthday</h2>\n            {props.items.length === 0 ? (\n                <span className={\"no-items\"}>No selected employees</span>\n            ) : undefined}\n            {groupByBdayArr(props.items).map((res) => (\n                <MonthEmployees {...res} />\n            ))}\n        </aside>\n    );\n};\n\nconst MonthEmployees = (props: { monthIndex: number; items: Employee[] }) => (\n    <article>\n        <h3 className={`month-label ${getSeasonByMonth(props.monthIndex)}`}>\n            {Months[props.monthIndex]}\n        </h3>\n        <ul className=\"bdays-list\">\n            {props.items.map((emp) => (\n                <li>\n                    <EmployeeItem item={emp} /> - {formatDate(emp.dob)}\n                </li>\n            ))}\n        </ul>\n    </article>\n);\n\nconst mapStateToProps = (state: StoreShape) => ({\n    items: state.employees.filter((emp) => state.selected.includes(emp.id)),\n});\n\nexport const Birthday = connect(mapStateToProps)(BirthdayItems);\n","import React from \"react\";\nimport { EmployeeList } from \"./EmployeesList\";\nimport { Birthday } from \"./Birthdays\";\n\nexport const Employees = () => (\n    <div className=\"employees-wrapper\">\n        <EmployeeList />\n        <Birthday />\n    </div>\n);\n","import React from \"react\";\n\nexport const Technologies = () => (\n    <div>\n        <h2>Technologies used:</h2>\n        <li>Typescript</li>\n        <li>React</li>\n        <li>Jest</li>\n    </div>\n);\n","const LocalStorageKey = \"YalantisTestTaskStore\";\n\ntype StorageState = {\n    selected: string[];\n};\n\nexport const accessStorage = (): StorageState | undefined => {\n    try {\n        const serializedState = localStorage.getItem(LocalStorageKey);\n\n        if (serializedState === null) {\n            return undefined;\n        }\n\n        return JSON.parse(serializedState);\n    } catch (err) {\n        console.log(\"Could not load local storage state\", err);\n\n        return undefined;\n    }\n};\n\nexport const writeToStorage = (data: { [key: string]: any }) => {\n    try {\n        localStorage.setItem(LocalStorageKey, JSON.stringify(data));\n    } catch (err) {\n        console.log(\"Could not write to storage\", err);\n    }\n};\n","import { Employee } from \"../types/Employee\";\n\nexport type StoreShape = {\n    employees: Employee[];\n    selected: string[];\n};\n\nexport const InitialShape: StoreShape = {\n    employees: [],\n    selected: [],\n};\n","import { EmployeesAction, SET_EMPLOYEES, UPDATE_SELECTION } from \"./actions\";\nimport { InitialShape, StoreShape } from \"./shape\";\n\nexport const appReducers = (\n    state: StoreShape = InitialShape,\n    action: EmployeesAction\n): StoreShape => employees(state, action);\n\nconst employees = (state: StoreShape, action: EmployeesAction): StoreShape => {\n    switch (action.type) {\n        case UPDATE_SELECTION:\n            return updateSelectionReducer(state, action.id);\n        case SET_EMPLOYEES:\n            return { ...state, employees: action.employees };\n        default:\n            return state;\n    }\n};\n\nconst updateSelectionReducer = (state: StoreShape, id: string): StoreShape => {\n    const isSelected = state.selected.includes(id);\n\n    return {\n        ...state,\n        selected: isSelected\n            ? state.selected.filter((id2) => id2 !== id)\n            : [...state.selected, id],\n    };\n};\n","import { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { accessStorage, writeToStorage } from \"../utils/localStorage\";\nimport { appReducers } from \"./reducers\";\nimport { InitialShape } from \"./shape\";\n\nconst loadState = () => accessStorage();\n\nconst store = createStore(\n    appReducers,\n    { ...InitialShape, ...loadState() },\n    applyMiddleware(thunk)\n);\n\nstore.subscribe(() => {\n    writeToStorage({\n        selected: store.getState().selected,\n    });\n});\n\nexport default store;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { Footer } from \"./components/basic/Footer\";\nimport { Header } from \"./components/basic/Header\";\nimport { Employees } from \"./components/Employees\";\nimport { Technologies } from \"./components/Technologies\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Router>\n                <div className=\"page-wrapper\">\n                    <Header />\n\n                    <Switch>\n                        <Route path=\"/technologies\">\n                            <Technologies />\n                        </Route>\n                        <Route path=\"/employees\">\n                            <Employees />\n                        </Route>\n                        <Route path=\"/\">\n                            <Employees />\n                        </Route>\n                    </Switch>\n                    <Footer />\n                </div>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}